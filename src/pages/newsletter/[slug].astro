---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getPost, listPostSlugs } from "../../lib/posts";

export async function getStaticPaths() {
  const slugs = listPostSlugs();
  return slugs.map((slug) => ({
    params: { slug },
  }));
}

const { slug } = Astro.params;
const post = await getPost(String(slug));
if (!post) {
  throw Astro.redirect("/newsletter/");
}

const dateFormatter = new Intl.DateTimeFormat("en-US", {
  month: "short",
  day: "numeric",
  year: "numeric",
});

const formatDate = (value: string) => {
  const parsed = new Date(value);
  return Number.isNaN(parsed.getTime()) ? value : dateFormatter.format(parsed);
};

const pageTitle = `${post.title} – Newsletter`;
const heroDescription =
  post.excerpt ??
  "Essays and updates on product, engineering, and AI at Stomatiq.";
---

<BaseLayout title={pageTitle}>
  <main class="mx-auto max-w-6xl px-4 md:px-0 py-10">
    <article class="space-y-12">
      <header class="space-y-8">
        <div
          class="relative overflow-hidden rounded-3xl bg-foreground/80 pb-10 pt-40 text-white"
        >
          <img
            src={post.cover ?? "/images/wave-001.png"}
            alt=""
            class="pointer-events-none absolute inset-0 h-full w-full object-cover"
            loading="lazy"
            aria-hidden="true"
          />
          <div class="relative space-y-4 px-6 md:px-10">
            <h1
              class="bg-black/80 p-4 text-4xl font-mono uppercase tracking-[0.2em] md:text-5xl w-fit"
            >
              {post.title}
            </h1>
            <p
              class="max-w-2xl bg-black/80 px-4 py-3 text-[16px] leading-7 text-white/90 w-fit"
            >
              {heroDescription}
            </p>
          </div>
        </div>
        <div class="mx-auto max-w-3xl space-y-4">
          <div
            class="flex flex-wrap items-center gap-3 text-xs uppercase tracking-wide text-foreground/60"
          >
            <time>{formatDate(post.date)}</time>
            <span class="text-foreground/30">•</span>
            <span>{post.readingMinutes} min read</span>
            {
              post.category && (
                <>
                  <span class="text-foreground/30">•</span>
                  <span>{post.category}</span>
                </>
              )
            }
          </div>
          {
            post.author && (
              <div class="flex items-center gap-3 text-sm text-foreground/70">
                {post.authorAvatar && (
                  <img
                    src={post.authorAvatar}
                    alt={post.author}
                    class="h-12 w-12 rounded-full object-cover"
                    loading="lazy"
                  />
                )}
                <div class="space-y-1">
                  <p class="font-medium text-foreground">{post.author}</p>
                  {post.authorBio && (
                    <p class="text-xs leading-5 text-foreground/60">
                      {post.authorBio}
                    </p>
                  )}
                </div>
              </div>
            )
          }
          {
            post.tags && post.tags.length > 0 && (
              <ul class="flex flex-wrap gap-2 text-[11px] uppercase tracking-[0.2em] text-foreground/60">
                {post.tags.map((tag) => (
                  <li class="rounded-full border border-foreground/15 px-3 py-1">
                    {tag}
                  </li>
                ))}
              </ul>
            )
          }
        </div>
      </header>
      <div
        class="prose-wrapper mx-auto max-w-3xl space-y-6 text-[15px] leading-7 text-foreground/80 [&_strong]:text-foreground"
        set:html={post.contentHtml}
      />
    </article>
  </main>
</BaseLayout>
