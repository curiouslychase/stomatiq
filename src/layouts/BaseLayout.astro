---
import "../styles/globals.css";
import SiteHeader from "../components/SiteHeader.astro";
import SiteFooter from "../components/SiteFooter.astro";
import PosthogLoader from "../components/PosthogLoader.astro";
const { title = "stomatiq" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Lora:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="apple-touch-icon"
      sizes="57x57"
      href="/apple-touch-icon-57x57.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="60x60"
      href="/apple-touch-icon-60x60.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="72x72"
      href="/apple-touch-icon-72x72.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="76x76"
      href="/apple-touch-icon-76x76.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="114x114"
      href="/apple-touch-icon-114x114.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="120x120"
      href="/apple-touch-icon-120x120.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="144x144"
      href="/apple-touch-icon-144x144.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="152x152"
      href="/apple-touch-icon-152x152.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="167x167"
      href="/apple-touch-icon-167x167.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/apple-touch-icon-180x180.png"
    />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png" />
    <link
      rel="icon"
      type="image/png"
      sizes="128x128"
      href="/favicon-128x128.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="196x196"
      href="/favicon-196x196.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="192x192"
      href="/android-chrome-192x192.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="512x512"
      href="/android-chrome-512x512.png"
    />
    <meta name="msapplication-square70x70logo" content="/mstile-70x70.png" />
    <meta
      name="msapplication-square150x150logo"
      content="/mstile-150x150.png"
    />
    <meta name="msapplication-wide310x150logo" content="/mstile-310x150.png" />
    <meta
      name="msapplication-square310x310logo"
      content="/mstile-310x310.png"
    />
    <meta name="msapplication-TileImage" content="/mstile-144x144.png" />
  </head>
  <body class="bg-background text-foreground min-h-screen flex flex-col">
    <SiteHeader />
    <div class="w-screen">
      <slot />
    </div>
    <SiteFooter />
    <PosthogLoader />
    <script is:inline>
      (function () {
        const getSystem = () =>
          window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        const applyTheme = (value) => {
          const theme = value === "system" ? getSystem() : value;
          document.documentElement.classList.toggle("dark", theme === "dark");
        };
        const slugifyHeading = (value) =>
          value
            .toLowerCase()
            .trim()
            .replace(/[^a-z0-9\s-]/g, "")
            .replace(/\s+/g, "-")
            .replace(/-+/g, "-");
        const ensureUniqueSlug = (slug, counts) => {
          const current = counts.get(slug) ?? 0;
          counts.set(slug, current + 1);
          return current === 0 ? slug : `${slug}-${current}`;
        };
        const enhanceHeadings = () => {
          const scopes = document.querySelectorAll("[data-heading-scope]");
          if (!scopes.length) return;
          scopes.forEach((scope) => {
            const counts = new Map();
            scope.querySelectorAll("h1, h2, h3, h4, h5, h6").forEach((heading) => {
              const text = heading.textContent ? heading.textContent.trim() : "";
              if (!text) return;
              const existingId = heading.getAttribute("id") || "";
              let slug = existingId.length ? existingId : slugifyHeading(text);
              if (!existingId) {
                slug = ensureUniqueSlug(slug || slugifyHeading(`section-${counts.size}`), counts);
                heading.id = slug;
              }
              if (!heading.querySelector(".heading-anchor") && slug) {
                const anchor = document.createElement("a");
                anchor.className = "heading-anchor";
                anchor.href = `#${slug}`;
                anchor.setAttribute("aria-label", `Jump to ${text}`);
                anchor.textContent = "Â¶";
                heading.appendChild(anchor);
              }
            });
          });
        };
        const init = () => {
          const select = document.getElementById("theme-select");
          const saved = localStorage.getItem("theme") || "system";
          if (select) select.value = saved;
          applyTheme(saved);
          if (select) {
            select.addEventListener("change", (e) => {
              const value = e.target.value;
              localStorage.setItem("theme", value);
              applyTheme(value);
            });
          }
          window
            .matchMedia("(prefers-color-scheme: dark)")
            .addEventListener("change", () => {
              const current = localStorage.getItem("theme") || "system";
              if (current === "system") applyTheme("system");
            });
          enhanceHeadings();
        };
        if (document.readyState === "loading") {
          document.addEventListener("DOMContentLoaded", init, { once: true });
        } else {
          init();
        }
      })();
    </script>
  </body>
</html>
