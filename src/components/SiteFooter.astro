---

---

<footer class="w-screen p-6 mt-auto">
  <div
    class="relative bg-background relative rounded-2xl border border-foreground/[.08] w-6xl mx-auto"
  >
    <div class="absolute left-6 bottom-6">
      <div class="h-[40px] w-[40px] text-foreground/90">
        <svg viewBox="0 0 1191 1178" class="block h-full w-full" aria-hidden>
          <g fill="currentColor">
            <ellipse
              cx="159.468"
              cy="113.171"
              rx="159.468"
              ry="113.171"
              transform="matrix(1 0 0 -1 417 226.342)"></ellipse>
            <ellipse
              cx="159.468"
              cy="113.171"
              rx="159.468"
              ry="113.171"
              transform="matrix(0 1 1 0 924.238 414.643)"></ellipse>
            <ellipse
              cx="159.468"
              cy="113.171"
              rx="159.468"
              ry="113.171"
              transform="matrix(-1 0 0 1 735.937 921.88)"></ellipse>
            <ellipse
              cx="159.468"
              cy="113.171"
              rx="159.468"
              ry="113.171"
              transform="matrix(0 -1 -1 0 228.7 733.579)"></ellipse>
            <ellipse cx="575.757" cy="574.351" rx="128.757" ry="127.351"
            ></ellipse>
            <ellipse
              cx="308.178"
              cy="294.178"
              rx="128.481"
              ry="88.1456"
              transform="rotate(-45 308.178 294.178)"></ellipse>
            <ellipse
              cx="841.281"
              cy="304.178"
              rx="128.481"
              ry="88.1456"
              transform="rotate(45 841.281 304.178)"></ellipse>
            <ellipse
              cx="841.281"
              cy="827.281"
              rx="128.481"
              ry="88.1456"
              transform="rotate(135 841.281 827.281)"></ellipse>
            <ellipse
              cx="308.178"
              cy="837.281"
              rx="128.481"
              ry="88.1456"
              transform="rotate(-135 308.178 837.281)"></ellipse>
          </g>
        </svg>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 p-6 items-start">
      <div class="hidden md:block md:col-span-2"></div>
      <div class="flex flex-col items-end gap-4 md:col-start-3">
        <nav
          class="grid w-full justify-items-end gap-y-3 text-[11px] uppercase text-foreground/70 md:w-auto md:text-xs md:grid-cols-2 md:gap-y-2 md:gap-x-6 mb-5"
          style="font-family: var(--font-mono);"
        >
          <div class="flex flex-col gap-2 md:items-end">
            <a href="/aboutique" class="hover:text-foreground">Aboutique</a>
            <a href="/newsletter" class="hover:text-foreground">Newsletter</a>
            <a href="/podcast" class="hover:text-foreground">Podcast</a>
            <a href="/products" class="hover:text-foreground">Products</a>
          </div>
          <div class="flex flex-col gap-2 md:items-end">
            <a href="/courses" class="hover:text-foreground">Courses</a>
            <a href="/consulting" class="hover:text-foreground">Consulting</a>
            <a href="/rss.xml" class="hover:text-foreground" prefetch="false"
              >RSS</a
            >
          </div>
        </nav>
        <div
          id="theme-select"
          class="inline-flex items-center rounded-lg border border-foreground/[.08] px-2 py-1.5 gap-1 text-xs relative"
          style="font-family: var(--font-mono);"
        >
          <button
            data-theme="dark"
            class="theme-toggle-btn relative inline-flex items-center justify-center rounded-md px-2 py-1.5 text-xs transition-all duration-200"
            aria-label="Dark"
          >
            <svg
              viewBox="0 0 24 24"
              width="16"
              height="16"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              ><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
              ></path></svg
            >
            <span
              class="theme-toggle-label inline-flex items-center uppercase tracking-wide text-xs overflow-hidden transition-all duration-200"
              >DARK</span
            >
          </button>
          <button
            data-theme="light"
            class="theme-toggle-btn relative inline-flex items-center justify-center rounded-md px-2 py-1.5 text-xs transition-all duration-200"
            aria-label="Light"
          >
            <svg
              viewBox="0 0 24 24"
              width="16"
              height="16"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              ><circle cx="12" cy="12" r="5"></circle><line
                x1="12"
                y1="1"
                x2="12"
                y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line
                x1="4.22"
                y1="4.22"
                x2="5.64"
                y2="5.64"></line><line
                x1="18.36"
                y1="18.36"
                x2="19.78"
                y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"
              ></line><line x1="21" y1="12" x2="23" y2="12"></line><line
                x1="4.22"
                y1="19.78"
                x2="5.64"
                y2="18.36"></line><line
                x1="18.36"
                y1="5.64"
                x2="19.78"
                y2="4.22"></line></svg
            >
            <span
              class="theme-toggle-label inline-flex items-center uppercase tracking-wide text-xs overflow-hidden transition-all duration-200"
              >LIGHT</span
            >
          </button>
          <button
            data-theme="system"
            class="theme-toggle-btn relative inline-flex items-center justify-center rounded-md px-2 py-1.5 text-xs transition-all duration-200"
            aria-label="System"
          >
            <svg
              viewBox="0 0 24 24"
              width="16"
              height="16"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              ><rect x="2" y="3" width="20" height="14" rx="2" ry="2"
              ></rect><line x1="8" y1="21" x2="16" y2="21"></line><line
                x1="12"
                y1="17"
                x2="12"
                y2="21"></line></svg
            >
            <span
              class="theme-toggle-label inline-flex items-center uppercase tracking-wide text-xs overflow-hidden transition-all duration-200"
              >SYSTEM</span
            >
          </button>
        </div>
      </div>
    </div>
  </div>
</footer>

<script is:inline>
  const btns = Array.from(
    document.querySelectorAll("#theme-select button[data-theme]")
  );

  const getSystem = () =>
    window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";

  const applyTheme = (value, animate = false) => {
    const theme = value === "system" ? getSystem() : value;
    document.documentElement.classList.toggle("dark", theme === "dark");

    btns.forEach((btn) => {
      const btnTheme = btn.getAttribute("data-theme");
      const isActive = btnTheme === value;
      const label = btn.querySelector(".theme-toggle-label");

      btn.setAttribute("aria-pressed", isActive);
      btn.classList.toggle("bg-foreground", isActive);
      btn.classList.toggle("text-background", isActive);
      btn.style.opacity = isActive ? "1" : "0.65";

      if (label) {
        label.style.transition = animate
          ? "width 200ms ease, opacity 200ms ease, margin 200ms ease"
          : "none";
        const width = label.dataset.width || label.scrollWidth;
        if (!label.dataset.width) {
          label.dataset.width = width;
        }
        label.style.width = isActive ? `${width}px` : "0px";
        label.style.opacity = isActive ? "1" : "0";
        label.style.marginLeft = isActive ? "0.35rem" : "0";
      }
    });
  };

  const initialize = () => {
    btns.forEach((btn) => {
      const label = btn.querySelector(".theme-toggle-label");
      if (label) {
        const width = label.scrollWidth;
        label.dataset.width = width;
        label.style.setProperty("transition", "none");
      }
    });

    const saved = localStorage.getItem("theme") || "system";
    applyTheme(saved, false);

    requestAnimationFrame(() => {
      btns.forEach((btn) => {
        const label = btn.querySelector(".theme-toggle-label");
        if (label) {
          label.style.removeProperty("transition");
        }
      });
    });
  };

  requestAnimationFrame(initialize);

  btns.forEach((button) =>
    button.addEventListener("click", () => {
      const value = button.getAttribute("data-theme");
      localStorage.setItem("theme", value);
      applyTheme(value, true);
    })
  );

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", () => {
      const current = localStorage.getItem("theme") || "system";
      if (current === "system") applyTheme("system", true);
    });
</script>

<style is:inline>
  #theme-select {
    font-family: var(--font-mono);
  }

  #theme-select .theme-toggle-btn {
    opacity: 0.65;
  }

  #theme-select .theme-toggle-label {
    width: 0;
    opacity: 0;
    margin-left: 0;
  }
</style>
